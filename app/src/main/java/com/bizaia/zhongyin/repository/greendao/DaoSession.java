package com.bizaia.zhongyin.repository.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bizaia.zhongyin.repository.data.HasWartchBean;
import com.bizaia.zhongyin.repository.data.LiveRemindBean;
import com.bizaia.zhongyin.repository.data.MonthlyNewestBean;
import com.bizaia.zhongyin.repository.data.CoursewareBean;

import com.bizaia.zhongyin.repository.greendao.HasWartchBeanDao;
import com.bizaia.zhongyin.repository.greendao.LiveRemindBeanDao;
import com.bizaia.zhongyin.repository.greendao.MonthlyNewestBeanDao;
import com.bizaia.zhongyin.repository.greendao.CoursewareBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig hasWartchBeanDaoConfig;
    private final DaoConfig liveRemindBeanDaoConfig;
    private final DaoConfig monthlyNewestBeanDaoConfig;
    private final DaoConfig coursewareBeanDaoConfig;

    private final HasWartchBeanDao hasWartchBeanDao;
    private final LiveRemindBeanDao liveRemindBeanDao;
    private final MonthlyNewestBeanDao monthlyNewestBeanDao;
    private final CoursewareBeanDao coursewareBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        hasWartchBeanDaoConfig = daoConfigMap.get(HasWartchBeanDao.class).clone();
        hasWartchBeanDaoConfig.initIdentityScope(type);

        liveRemindBeanDaoConfig = daoConfigMap.get(LiveRemindBeanDao.class).clone();
        liveRemindBeanDaoConfig.initIdentityScope(type);

        monthlyNewestBeanDaoConfig = daoConfigMap.get(MonthlyNewestBeanDao.class).clone();
        monthlyNewestBeanDaoConfig.initIdentityScope(type);

        coursewareBeanDaoConfig = daoConfigMap.get(CoursewareBeanDao.class).clone();
        coursewareBeanDaoConfig.initIdentityScope(type);

        hasWartchBeanDao = new HasWartchBeanDao(hasWartchBeanDaoConfig, this);
        liveRemindBeanDao = new LiveRemindBeanDao(liveRemindBeanDaoConfig, this);
        monthlyNewestBeanDao = new MonthlyNewestBeanDao(monthlyNewestBeanDaoConfig, this);
        coursewareBeanDao = new CoursewareBeanDao(coursewareBeanDaoConfig, this);

        registerDao(HasWartchBean.class, hasWartchBeanDao);
        registerDao(LiveRemindBean.class, liveRemindBeanDao);
        registerDao(MonthlyNewestBean.class, monthlyNewestBeanDao);
        registerDao(CoursewareBean.class, coursewareBeanDao);
    }
    
    public void clear() {
        hasWartchBeanDaoConfig.clearIdentityScope();
        liveRemindBeanDaoConfig.clearIdentityScope();
        monthlyNewestBeanDaoConfig.clearIdentityScope();
        coursewareBeanDaoConfig.clearIdentityScope();
    }

    public HasWartchBeanDao getHasWartchBeanDao() {
        return hasWartchBeanDao;
    }

    public LiveRemindBeanDao getLiveRemindBeanDao() {
        return liveRemindBeanDao;
    }

    public MonthlyNewestBeanDao getMonthlyNewestBeanDao() {
        return monthlyNewestBeanDao;
    }

    public CoursewareBeanDao getCoursewareBeanDao() {
        return coursewareBeanDao;
    }

}
